pipeline{
	agent any
	environment{
		USER_INFO = "environment variable"
	}
	stages{
		stage ('change workspace'){
			steps{
				 dir("${env.workspace}/currency-exchange-service" ) {                    
                		}
			}
		}
		stage('build and test'){
			steps{
				 dir("${env.workspace}/currency-exchange-service" ) {        
					echo "${env.WORKSPACE} test"
					bat "chdir ${env.WORKSPACE}/currency-exchange-service"
					bat "dir"
					bat "mvn clean install"
					echo "build success"
				 }
			}
			post{
				success{
					dir("${env.workspace}/currency-exchange-service" ) {        
						junit '**/target/surefire-reports/TEST-*.xml'
						archiveArtifacts 'target/*.jar'
						echo "Results published"
					}
				}
			}
		}
		stage('docker package'){
			environment{
				dockerRepositoryUrl = "bgrapati/currency-exchange-service"
			}
			
			steps{
				script{
					withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'PASSWORD', usernameVariable: 'USRNAME')]) {
						bat "docker login -u $USRNAME -p $PASSWORD"
						USER_INFO = "${USRNAME}"
						env.USER_INFO = USER_INFO + " dfsfd"
					}
				}
				
				echo "login success ${USER_INFO}"
				echo "login success ${env.USER_INFO}"
				
				dir("${env.workspace}/currency-exchange-service" ) {        
					bat "docker build -t $dockerRepositoryUrl:$BUILD_NUMBER -t $dockerRepositoryUrl:latest -f Dockerfile ."
					bat "docker push $dockerRepositoryUrl"
					bat "docker rmi $dockerRepositoryUrl $dockerRepositoryUrl:$BUILD_NUMBER"
				}
			}
		}	
		stage('deploy application'){
			steps{
				dir("${env.workspace}/currency-exchange-service" ) {        
					bat "kubectl config view"
					bat "kubectl apply -f currency-exchange-pod.yaml"
					bat "kubectl apply -f currency-exchange-clusterip-service.yaml"
				}
			}
		}
	
	}
}
